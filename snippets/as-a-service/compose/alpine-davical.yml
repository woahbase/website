---
services:
  davical:
    container_name: davical
    # depends_on:
    #   postgresql:
    #     condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s
    environment:
      PGHOST: your.postgres.local
      PGPORT: 5432
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: insecurebydefault

      # DAVI_DATABASE: davical
      # DAVI_ADMMAIL: calendar-admin@example.com
      # DAVI_APPUSER: davical_app
      # DAVI_APPPASS: insecurebydefault
      # DAVI_HOSTNAME: localhost
      # DAVI_LOCALE: en_US
      # DAVI_SYSTNAME: "DAViCal CalDAV Server"

      # DAVI_DBAUSER: davical_dba
      # DAVI_DBAPASS: insecurebydefault
      # DAVI_SCHEMA: davical_dba

      # WEBADMIN: admin
      # PASSWORD: nimda

      # DAVI_SKIP_PERMFIX: 1
      # DAVI_SKIP_DBSETUP: 1
      # DAVI_SKIP_MIGRATION: 1

      PUID: ${PUID:-1000}
      PGID: ${PGID:-100}
      # TZ: ${TZ}
    # healthcheck:
    #   interval: 2m
    #   retries: 5
    #   start_period: 5m
    #   test:
    #     - CMD-SHELL
    #     - >
    #       wget --quiet --tries=1 --no-check-certificate --spider http://localhost:80/ || exit 1
    #   timeout: 10s
    hostname: davical
    image: woahbase/alpine-davical:${DAVI_TAG:-latest}
    network_mode: bridge
    ports:
      - protocol: tcp
        host_ip: 0.0.0.0
        published: ${DAVI_PORT:-80}
        target: 80
      # # optionally with https
      # # requires certificates, either provided, or self-signed ones generated
      # - protocol: tcp
      #   host_ip: 0.0.0.0
      #   published: ${DAVI_PORT:-443}
      #   target: 443
    volumes:
      # - type: bind  # to use your own certificates with davical
      #   source: ${CERTIFICATE_DIR:?err}
      #   target: /config/keys
      #   bind:
      #     create_host_path: true
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: false
